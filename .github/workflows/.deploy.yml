name: .Deploys

on:
  workflow_call:
    inputs:
      ### Required
      # Nothing! Only `secrets: inherit` is required

      ### Typical / recommended
      environment:
        description: GitHub/OpenShift environment; usually PR number, test or prod
        default: ''
        required: false
        type: string
      tag:
        description: Container tag; usually PR number
        default: ${{ github.event.number }}
        required: false
        type: string
      target:
        description: Deployment target; usually PR number, test or prod
        default: ${{ github.event.number }}
        required: false
        type: string

    outputs:
      run_tests:
        description: Run Cypress tests if the core apps have changed (excludes sync)
        value: ${{ jobs.init.outputs.deploy_core }}

jobs:
  init:
    name: Deploy (init)
    environment: ${{ inputs.environment }}
    outputs:
      route: ${{ steps.route.outputs.route }}
    runs-on: ubuntu-latest
    steps:
      - name: FAM routing
        id: route
        run: |
          if [ ${{ github.event_name }} == 'pull_request' ]; then
            echo "route=$(( ${{ inputs.target }} % 50 ))" >> $GITHUB_OUTPUT
          else
            echo "route=${{ inputs.target }}" >> $GITHUB_OUTPUT
          fi

      - name: OpenShift Init
        uses: bcgov-nr/action-deployer-openshift@v3.0.1
        with:
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          file: common/openshift.init.yml
          overwrite: true
          parameters:
            -p ZONE=${{ inputs.target }}
            -p AWS_KINESIS_STREAM='${{ secrets.AWS_KINESIS_STREAM }}'
            -p AWS_KINESIS_ROLE_ARN='${{ secrets.AWS_KINESIS_ROLE_ARN }}'
            -p AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            -p AWS_ACCESS_KEY_SECRET='${{ secrets.AWS_ACCESS_KEY_SECRET }}'
            -p ORACLE_DB_USER=${{ secrets.DB_USER }}
            -p ORACLE_DB_PASSWORD='${{ secrets.ORACLE_DB_PASSWORD }}'
            -p ORACLE_DB_HOST='${{ secrets.ORACLE_DB_HOST }}'
            -p ORACLE_DB_SERVICE='${{ secrets.ORACLE_DB_SERVICE }}'
            -p POSTGRES_DB_PASSWORD='${{ secrets.POSTGRES_DB_PASSWORD }}'
            -p FORESTCLIENTAPI_KEY='${{ secrets.FORESTCLIENTAPI_KEY }}'
            -p VITE_USER_POOLS_WEB_CLIENT_ID=${{ vars.VITE_USER_POOLS_WEB_CLIENT_ID }}
            -p VITE_USER_POOLS_ID=${{ vars.VITE_USER_POOLS_ID }}
          triggers: ('backend' 'common/' 'database/' 'frontend/')

  deploy:
    name: Deploy
    environment: ${{ inputs.environment }}
    needs: [init]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        name: [database, backend, frontend, fluentbit]
        include:
          - name: database
            file: database/openshift.deploy.yml
            parameters:
              -p DB_PVC_SIZE=128Mi
            overwrite: false
          - name: backend
            file: backend/openshift.deploy.yml
            timeout: 15m
            verification_path: /actuator/health
            parameters:
              -p MAX_REPLICAS=1
              -p MIN_REPLICAS=1
              -p DB_POOL_MAX_SIZE=1
              -p AWS_COGNITO_ISSUER_URI=https://cognito-idp.${{ vars.AWS_REGION }}.amazonaws.com/${{ vars.VITE_USER_POOLS_ID }}
              -p DASHBOARD_JOB_IDIR_USERS=${{ vars.DASHBOARD_JOB_IDIR_USERS }}
              -p WMS_LAYERS_WHITELIST_USERS=${{ vars.WMS_LAYERS_WHITELIST_USERS }}
              -p ALLOWED_ORIGINS=https://${{ github.event.repository.name }}-${{ needs.init.outputs.route }}-frontend.apps.silver.devops.gov.bc.ca
          - name: frontend
            file: frontend/openshift.deploy.yml
            parameters:
              -p MIN_REPLICAS=1
              -p MAX_REPLICAS=1
              -p FAM_ROUTE=${{ needs.init.outputs.route }}
          - name: fluentbit
            file: common/openshift.fluentbit.yml
      - uses: bcgov-nr/action-deployer-openshift@v3.0.1
        id: deploys
        with:
          file: ${{ matrix.file }}
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: ${{ matrix.overwrite }}
          parameters:
            -p ZONE=${{ inputs.target }} -p TAG=${{ inputs.tag }}
            ${{ matrix.parameters }}
          timeout: 15m
          triggers: ('backend' 'common/' 'database/' 'frontend/')
          verification_path: ${{ matrix.verification_path }}
          verification_retry_attempts: 5
          verification_retry_seconds: 20
