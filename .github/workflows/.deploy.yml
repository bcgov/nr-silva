name: Deploy

on:
  workflow_call:
    inputs:
      ### Required
      environment:
        description: 'GitHub Actions environment for variables and secrets.'
        required: false
        type: string
      tag:
        description: 'Docker semver tag or SHA.  E.g.: needs.semver.outputs.semver or github.sha.'
        required: false
        type: string
      backend_tag:
        description: 'backend Tag, could be tag or sha'
        required: true
        type: string
      migrations_tag:
        description: 'migrations Tag, could be tag or sha'
        required: true
        type: string
      frontend_tag:
        description: 'frontend Tag, could be tag or sha'
        required: true
        type: string
      autoscaling:
        description: 'Autoscaling enabled or not for the deployments'
        required: false
        type: boolean
        default: true

      target:
        description: 'PR number, test or prod.'
        required: true
        type: string

      ### Usually a bad idea / not recommended
      directory:
        description: 'Chart directory.'
        default: 'charts/${{ github.event.repository.name }}'
        required: false
        type: string
      timeout-minutes:
        description: 'Timeout minutes'
        default: 10
        required: false
        type: number
      values:
        description: 'Values file.'
        default: 'values.yaml'
        required: false
        type: string
jobs:
  # https://github.com/bcgov-nr/action-deployer-openshift
  deploys:
    name: Helm
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-22.04
    timeout-minutes: ${{ inputs.timeout-minutes }}
    steps:
      - uses: actions/checkout@v4
      - name: Deploy
        working-directory: ${{ inputs.directory }}
        shell: bash
        run: |
          
          # Login to OpenShift (NOTE: project command is a safeguard)
          oc login --token=${{ secrets.oc_token }} --server=${{ vars.oc_server }}
          oc project ${{ vars.oc_namespace }}

          # Interrupt any previous jobs (status = pending-upgrade)
          PREVIOUS=$(helm status ${{ github.event.repository.name }}-${{ inputs.target }} -o json | jq .info.status || true)
          if [[ ${PREVIOUS} =~ pending ]]; then
            echo "Rollback triggered"
            helm rollback ${{ github.event.repository.name }}-${{ inputs.target }} || \
              helm uninstall ${{ github.event.repository.name }}-${{ inputs.target }}
          fi
          # Deploy Helm Chart
          helm dependency update
          helm upgrade \
            --set-string global.repository=${{ github.repository }} \
            --set-string backend.containers[0].tag="${{ inputs.backend_tag }}" \
            --set-string backend.initContainers[0].tag="${{ inputs.migrations_tag }}" \
            --set-string frontend.containers[0].tag="${{ inputs.frontend_tag }}" \
            --set-string global.secrets.databasePassword=${{ secrets.DB_PASSWORD }} \
            --set backend.autoscaling.enabled=${{ inputs.autoscaling }} \
            --set frontend.autoscaling.enabled=${{ inputs.autoscaling }} \
            --install --wait --atomic ${{ github.event.repository.name }}-${{ inputs.target }} \
            --timeout ${{ inputs.timeout-minutes }}m \
            --values ${{ inputs.values }} .
