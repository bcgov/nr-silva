name: PR

on:
  pull_request:
    branches: [main]

concurrency:
  # PR open and close use the same group, allowing only one at a time
  group: pr-${{ github.workflow }}-${{ github.event.number }}
  cancel-in-progress: true


jobs:
  init:
    name: Initialize
    if: "!github.event.pull_request.head.repo.fork"
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: write
    steps:
      - name: Get PR Number Mod 50
        id: tag
        run: echo "tag=$(( ${{ github.event.number }} % 50 ))" >> $GITHUB_OUTPUT

      - name: PR Greeting
        env:
          DOMAIN: apps.silver.devops.gov.bc.ca
          PREFIX: ${{ github.event.repository.name }}-${{ steps.tag.outputs.tag }}
        uses: bcgov-nr/action-pr-description-add@v1.1.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          add_markdown: |
            ---

            Thanks for the PR!

            Any successful deployments (not always required) will be available below.
            [Backend](https://${{ env.PREFIX }}-backend.${{ env.DOMAIN }}/actuator/health)
            [Frontend](https://${{ env.PREFIX }}-frontend.${{ env.DOMAIN }})

            Once merged, code will be promoted and handed off to following workflow run.
            [Main Merge Workflow](https://github.com/${{ github.repository }}/actions/workflows/merge-main.yml)

      - name: OpenShift Init
        uses: bcgov-nr/action-deployer-openshift@v2.0.0
        with:
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          file: common/openshift.init.yml
          overwrite: false
          parameters:
            -p ZONE=${{ steps.tag.outputs.tag }}
            -p NAME=${{ github.event.repository.name }}
          triggers: ('common/' 'database/' 'backend/' 'frontend/')

  builds:
    name: Builds
    needs: [init]
    if: "!github.event.pull_request.head.repo.fork"
    runs-on: ubuntu-22.04
    permissions:
      packages: write
    strategy:
      matrix:
        name: [database, backend, frontend]
        include:
          - package: database
            triggers: ('database/')
          - name: backend
            triggers: ('backend/')
          - name: frontend
            triggers: ('frontend/')
    steps:
      - uses: actions/checkout@v4
      - uses: bcgov-nr/action-builder-ghcr@v2.0.0
        with:
          package: ${{ matrix.name }}
          tag: ${{ needs.init.outputs.tag }}
          tag_fallback: test
          token: ${{ secrets.GITHUB_TOKEN }}
          triggers: ${{ matrix.triggers }}

  deploys:
    name: Deploys
    if: "!github.event.pull_request.head.repo.fork"
    needs: [builds, init]
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        name: [database, backend, frontend]
        include:
          - name: database
            file: database/openshift.deploy.yml
            parameters:
              -p DB_PVC_SIZE=128Mi
            overwrite: false
            triggers: ('common/' 'database/' 'backend/' 'frontend/')
          - name: backend
            file: backend/openshift.deploy.yml
            triggers: ('common/' 'database/' 'backend/' 'frontend/')
            verification_path: /actuator/health
            parameters:
              -p MIN_REPLICAS=1
              -p MAX_REPLICAS=2
          - name: frontend
            file: frontend/openshift.deploy.yml
            triggers: ('common/' 'database/' 'backend/' 'frontend/')
            parameters:
              -p VITE_USER_POOLS_WEB_CLIENT_ID=${{ vars.VITE_USER_POOLS_WEB_CLIENT_ID }}
              -p MIN_REPLICAS=1
              -p MAX_REPLICAS=2
    steps:
      - uses: bcgov-nr/action-deployer-openshift@v2.0.0
        with:
          file: ${{ matrix.name }}/openshift.deploy.yml
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          parameters:
            -p ZONE=${{ needs.tag.outputs.tag }}
            -p NAME=${{ github.event.repository.name }}
            ${{ matrix.parameters }}
          triggers: ${{ matrix.triggers }}
          verification_path: ${{ matrix.verification_path }}
