name: Merge

on:
  workflow_run:
    workflows: [PR Closed]
    types: [completed]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  codeql:
    name: Semantic Code Analysis
    runs-on: ubuntu-22.04
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4

      - name: Initialize
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
      # If this step fails, then you should remove it and run the build manually (see below)
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  init-test:
    name: TEST Init
    environment: test
    runs-on: ubuntu-22.04
    steps:
      - name: OpenShift Init
        uses: bcgov-nr/action-deployer-openshift@v2.0.0
        with:
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          file: common/openshift.init.yml
          overwrite: false
          parameters:
            -p ZONE=test -p NAME=${{ github.event.repository.name }}
            -p AWS_KINESIS_STREAM='${{ secrets.AWS_KINESIS_STREAM }}'
            -p AWS_KINESIS_ROLE_ARN='${{ secrets.AWS_KINESIS_ROLE_ARN }}'
            -p AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            -p AWS_ACCESS_KEY_SECRET='${{ secrets.AWS_ACCESS_KEY_SECRET }}'

  deploys-test:
    name: TEST Deployments
    needs: [init-test]
    environment: test
    runs-on: ubuntu-22.04
    permissions:
      issues: write
    strategy:
      matrix:
        name: [database, backend, frontend, fluentbit]
        include:
          - name: database
            overwrite: false
            file: database/openshift.deploy.yml
          - name: backend
            verification_path: actuator/health
            file: backend/openshift.deploy.yml
            parameters:
              -p RESULTS_ENV_OPENSEARCH=test
          - name: frontend
            file: frontend/openshift.deploy.yml
            parameters:
              -p VITE_USER_POOLS_WEB_CLIENT_ID=${{ vars.VITE_USER_POOLS_WEB_CLIENT_ID }}
          - name: fluentbit
            file: common/openshift.fluentbit.yml
            overwrite: true
    steps:
      - uses: bcgov-nr/action-deployer-openshift@v2.0.0
        with:
          file: ${{ matrix.file }}
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: ${{ matrix.overwrite }}
          parameters:
            -p ZONE=test
            -p NAME=${{ github.event.repository.name }}
            ${{ matrix.parameters }}
          verification_path: ${{ matrix.verification_path }}

  init-prod:
    name: PROD Init
    needs: [deploys-test]
    environment: prod
    runs-on: ubuntu-22.04
    steps:
      - name: OpenShift Init
        uses: bcgov-nr/action-deployer-openshift@v2.0.0
        with:
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          file: common/openshift.init.yml
          overwrite: false
          parameters:
            -p ZONE=prod -p NAME=${{ github.event.repository.name }}
            -p AWS_KINESIS_STREAM='${{ secrets.AWS_KINESIS_STREAM }}'
            -p AWS_KINESIS_ROLE_ARN='${{ secrets.AWS_KINESIS_ROLE_ARN }}'
            -p AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            -p AWS_ACCESS_KEY_SECRET='${{ secrets.AWS_ACCESS_KEY_SECRET }}'

  image-promotions:
    name: Promote images to PROD
    needs: [deploys-test]
    runs-on: ubuntu-22.04
    permissions:
      packages: write
    strategy:
      matrix:
        component: [database, backend, frontend]
    steps:
      - uses: shrink/actions-docker-registry-tag@v3
        with:
          registry: ghcr.io
          repository: ${{ github.repository }}/${{ matrix.component }}
          target: test
          tags: prod

  deploys-prod:
    name: PROD Deployments
    needs: [init-prod, image-promotions]
    environment: prod
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        name: [database, backend, frontend, fluentbit]
        include:
          - name: database
            overwrite: false
            file: database/openshift.deploy.yml
          - name: backend
            verification_path: actuator/health
            file: backend/openshift.deploy.yml
            parameters:
              -p RESULTS_ENV_OPENSEARCH=production
          - name: frontend
            file: frontend/openshift.deploy.yml
            parameters:
              -p VITE_USER_POOLS_WEB_CLIENT_ID=${{ vars.VITE_USER_POOLS_WEB_CLIENT_ID }}
          - name: fluentbit
            file: common/openshift.fluentbit.yml
            overwrite: true
    steps:
      - uses: bcgov-nr/action-deployer-openshift@v2.0.0
        with:
          file: ${{ matrix.file }}
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: ${{ matrix.overwite }}
          parameters:
            -p ZONE=prod
            -p NAME=${{ github.event.repository.name }}
            ${{ matrix.parameters }}
          verification_path: ${{ matrix.verification_path }}
