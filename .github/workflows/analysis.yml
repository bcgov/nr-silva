name: Analysis

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review, converted_to_draft]
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: {}

jobs:
  tests-backend:
    name: Tests (Backend)
    if: github.event_name != 'pull_request' || !github.event.pull_request.draft
    runs-on: ubuntu-24.04
    steps:
      - uses: bcgov/action-test-and-analyse-java@7c7309721cae054b3e837c723afa4efb4b1a256d # v1.1.0
        with:
          commands: ./mvnw -s settings.xml clean install --no-transfer-progress checkstyle:checkstyle -P all-tests
          dir: backend
          java-cache: maven
          java-distribution: temurin
          java-version: 21
          sonar_args: >
            -Dsonar.exclusions=,**/configuration/**,**/dto/**,**/entity/**,**/exception/**,**/enums/**,**/repository/**,**/job/**,**/*$*Builder*,**/ResultsApplication.*,**/*Constants.*,**/security/**
            -Dsonar.coverage.jacoco.xmlReportPaths=target/coverage-reports/merged-test-report/jacoco.xml
            -Dsonar.organization=bcgov-sonarcloud
            -Dsonar.project.monorepo.enabled=true
            -Dsonar.projectKey=nr-silva-backend
          sonar_token: ${{ secrets.SONAR_TOKEN_BACKEND }}
          # Only use triggers for PRs
          triggers: ${{ github.event_name == 'pull_request' && '("backend/")' || '' }}

  lint-frontend:
    name: Lint (Frontend)
    if: github.event_name != 'pull_request' || !github.event.pull_request.draft
    runs-on: ubuntu-24.04
    steps:
      - uses: bcgov/action-test-and-analyse@e2ba34132662c1638dbde806064eb7004b3761c3 # v1.3.0
        with:
          commands: |
            npm ci
            npm run lint || true
          dir: frontend
          node_version: "20"
          # Only use triggers for PRs
          triggers: ${{ github.event_name == 'pull_request' && '("frontend/")' || '' }}

  tests-frontend:
    name: Tests (Frontend)
    if: github.event_name != 'pull_request' || !github.event.pull_request.draft
    runs-on: ubuntu-24.04
    steps:
      - uses: bcgov/action-test-and-analyse@e2ba34132662c1638dbde806064eb7004b3761c3 # v1.3.0
        env:
          VITE_ZONE: test
          VITE_USER_POOLS_ID: ${{ vars.VITE_USER_POOLS_ID }}
          VITE_USER_POOLS_WEB_CLIENT_ID: ${{ vars.VITE_USER_POOLS_WEB_CLIENT_ID }}
          VITE_BACKEND_URL: http://localhost:8080
          TEST_BCEID_USERNAME: ${{ secrets.TEST_BCEID_USERNAME }}
          TEST_BCEID_PASSWORD: ${{ secrets.TEST_BCEID_PASSWORD }}
        with:
          commands: |
            npm ci
            npx playwright install chromium
            npm run coverage
          dir: frontend
          node_version: "20"
          sonar_args: >
            -Dsonar.organization=bcgov-sonarcloud
            -Dsonar.projectKey=nr-silva-frontend
            -Dsonar.javascript.lcov.reportPaths=.nyc_output/coverage/lcov.info
            -Dsonar.typescript.tsconfigPaths=tsconfig.json
            -Dsonar.sources=src/
            -Dsonar.exclusions=src/__test__/**,src/__e2e__/**,src/amplifyconfiguration.*,src/**/*.scss,src/**/*.css,src/**/*.d.*,src/setupTests.*
            -Dsonar.tests=src/__test__/,src/__e2e__/
            -Dsonar.project.monorepo.enabled=true
          sonar_token: ${{ secrets.SONAR_TOKEN_FRONTEND }}
          # Only use triggers for PRs
          triggers: ${{ github.event_name == 'pull_request' && '("frontend/")' || '' }}

  # https://github.com/marketplace/actions/aqua-security-trivy
  trivy:
    name: Trivy Security Scan
    if: github.event_name != 'pull_request' || !github.event.pull_request.draft
    permissions:
      security-events: write
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@dc5a429b52fcf669ce959baa2c2dd26090d2a6c4 # 0.32.0
        with:
          format: "sarif"
          output: "trivy-results.sarif"
          ignore-unfixed: true
          scan-type: "fs"
          scanners: "vuln,secret,config"
          severity: "CRITICAL,HIGH"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results.sarif"

  results:
    name: Analysis Results
    if: always()
    # Include all needs that could have failures!
    needs: [lint-frontend, tests-backend, tests-frontend] # Include trivy when/if it gets back to being reliable
    runs-on: ubuntu-24.04
    steps:
      - run: |
          # View results
          echo "needs.*.result: ${{ toJson(needs.*.result) }}"

      - if: contains(needs.*.result, 'failure')||contains(needs.*.result, 'canceled')
        run: |
          # Job failure found
          echo "At least one job has failed"
          exit 1
