x-frontend: &frontend
  environment:
    VITE_ZONE: DEV
    VITE_USER_POOLS_ID: ca-central-1_t2HSZBHur
    VITE_USER_POOLS_WEB_CLIENT_ID: 3g6n2ha1loi4kp1jhaq359vrvb
    VITE_BACKEND_URL: http://localhost:8080
  healthcheck:
    test: curl http://localhost:3000"
    interval: 15s
    timeout: 5s
    retries: 5
  restart: always


x-backend: &backend
  healthcheck:
    test: curl -f http://localhost:8080/actuator/health | grep '"status":"UP"'
    interval: 5s
    timeout: 5s
    retries: 5
  #restart: always

x-db-vars: &db-vars
  POSTGRES_USER: nr-silva
  POSTGRES_PASSWORD: default
  POSTGRES_DB: nr-silva

services:
  frontend:
    container_name: frontend
    entrypoint: sh -c "npm ci && npm run start"
    image: node:20-bullseye
    ports: ["3000:3000"]
    volumes: ["./frontend:/app", "/app/node_modules"]
    working_dir: "/app"
    <<: *frontend

  caddy:
    container_name: caddy
    profiles: ["caddy"]
    build: ./frontend
    ports: ["3005:3000"]
    volumes: ["./frontend/Caddyfile:/etc/caddy/Caddyfile"]
    <<: *frontend

  backend:
    container_name: backend
    entrypoint: sh -c './startup.sh'
    #image: maven:3.9.6-amazoncorretto-21
    image: maven:3.9.9-eclipse-temurin-17
    network_mode: host
    volumes:
      - ./backend:/app
      - $HOME/zscaler-certs:/certs
    working_dir: /app
    environment:
      DATABASE_HOST: nrcdb03.bcgov
      DATABASE_PORT: "1543"
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      SERVICE_NAME: dbq01.nrs.bcgov
      ORACLEDB_KEYSTORE: /app/jssecacerts
      ORACLEDB_SECRET: changeit
      AWS_COGNITO_ISSUER_URI: https://cognito-idp.ca-central-1.amazonaws.com/ca-central-1_t2HSZBHur
      POSTGRES_HOST: localhost
      DASHBOARD_JOB_IDIR_USERS: ${DASHBOARD_JOB_IDIR_USERS}
      <<: *db-vars
    <<: *backend

  database:
    container_name: database
    environment:
      <<: *db-vars
    volumes: ["/pgdata"]
    ports: ["5432:5432"]
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      timeout: 5s
      retries: 5
    image: postgis/postgis:13-master

  backend-native:
    container_name: backend-native
    profiles: ["native"]
    build: ./backend
    ports: ["8080:8080"]
    <<: *backend

  wiremock:
    image: "wiremock/wiremock:latest"
    container_name: forest-client-api-stub
    ports: ["9000:9000","9001:9001"]
    volumes:
      - ./stub/:/home/wiremock/
    entrypoint: ["/docker-entrypoint.sh", "--enable-stub-cors","--global-response-templating","--port","9000","--https-port","9001","--verbose"]

  legacydb:
    # profiles ensure the legacydb won't run on default `docker compose up`
    # To start the legacy db along with other services, use `docker compose --profile legacy up`
    profiles: ["legacy"]
    container_name: oracle
    environment:
      APP_USER_PASSWORD: default
      APP_USER: THE
      ORACLE_RANDOM_PASSWORD: yes
    platform: "linux/amd64"
    image: gvenzl/oracle-free:23.5-slim-faststart
    ports: [1521:1521]
    volumes: [/opt/oracle/oradata]
    healthcheck:
      test: [ "CMD-SHELL", "healthcheck.sh" ]
      interval: 5s
      timeout: 10s
      retries: 10
