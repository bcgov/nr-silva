<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.4.1</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>
  <groupId>ca.bc.gov.restapi</groupId>
  <artifactId>results</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>results</name>
  <description>RESULTS REST API</description>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <properties>
    <java.version>17</java.version>
    <jdk.version>17</jdk.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <skip.integration.tests>true</skip.integration.tests>
    <skip.unit.tests>true</skip.unit.tests>
    <jacoco.skip>true</jacoco.skip>
    <checkstyle.skip>true</checkstyle.skip>
    <checkstyle.failsOnError>false</checkstyle.failsOnError>
    <checkstyle.includeTestSourceDirectory>true</checkstyle.includeTestSourceDirectory>
    <jacoco.output.data>${project.build.directory}/coverage-reports</jacoco.output.data>
    <timestamp>${maven.build.timestamp}</timestamp>
    <maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>
    <sonar.organization>bcgov-sonarcloud</sonar.organization>
    <sonar.host.url>https://sonarcloud.io</sonar.host.url>
    <oci.revision>${project.version}</oci.revision>
    <snakeyaml.version>2.2</snakeyaml.version>
    <hibernate.version>6.6.4.Final</hibernate.version>
    <testcontainers.version>1.20.4</testcontainers.version>
    <flyway.version>10.13.0</flyway.version>
  </properties>

  <profiles>
    <!-- all tests: enables integration and unit tests, coverage and checkstyle -->
    <profile>
      <id>all-tests</id>
      <properties>
        <build.profile.id>all-tests</build.profile.id>
        <skip.integration.tests>false</skip.integration.tests>
        <skip.unit.tests>false</skip.unit.tests>
        <jacoco.skip>false</jacoco.skip>
        <checkstyle.skip>false</checkstyle.skip>
      </properties>
    </profile>

    <!-- dev: development profile -->
    <profile>
      <id>dev</id>
      <properties>
        <build.profile.id>dev</build.profile.id>
      </properties>
    </profile>

    <!-- integration-tests: enables integration tests and disables unit tests -->
    <profile>
      <id>integration-test</id>
      <properties>
        <build.profile.id>integration-test</build.profile.id>
        <skip.integration.tests>false</skip.integration.tests>
        <skip.unit.tests>true</skip.unit.tests>
      </properties>
    </profile>

    <!-- prod -->
    <profile>
      <id>prod</id>
      <properties>
        <build.profile.id>prod</build.profile.id>
        <skip.unit.tests>true</skip.unit.tests>
      </properties>
    </profile>

    <!-- cloud native -->
    <profile>
      <id>native</id>
      <properties>
        <build.profile.id>native</build.profile.id>
        <skip.integration.tests>true</skip.integration.tests>
        <skip.unit.tests>true</skip.unit.tests>
        <jacoco.skip>true</jacoco.skip>
      </properties>
      <build>
        <plugins>
          <!--
            GraalVM: Cloud Native support
            More: https://docs.spring.io/spring-boot/docs/current/reference/html/native-image.html
            Even more: https://graalvm.github.io/native-build-tools/latest/maven-plugin.html
          -->
          <plugin>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>build-native</id>
                <goals>
                  <goal>compile-no-fork</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <dependencies>
    <!-- Spring Boot -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>

    <!-- Tools -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.36</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.17.0</version>
    </dependency>

    <!-- DevOps -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <!-- Database -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.database.jdbc</groupId>
      <artifactId>ojdbc11</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-database-postgresql</artifactId>
    </dependency>
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-database-oracle</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>oracle-free</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
    </dependency>

    <!-- Testing -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.wiremock</groupId>
      <artifactId>wiremock-standalone</artifactId>
      <version>3.10.0</version>
      <scope>test</scope>
    </dependency>

    <!-- Authentication and Security -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-oauth2-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
    </dependency>
  </dependencies>

  <build>
    <finalName>nr-results-backend</finalName>

    <plugins>
      <!--
        Hibernate: Configs for Hibernate Cloud Native compatibility
        More: https://vladmihalcea.com/maven-gradle-hibernate-enhance-plugin/
      -->
      <plugin>
        <groupId>org.hibernate.orm.tooling</groupId>
        <artifactId>hibernate-enhance-maven-plugin</artifactId>
        <version>${hibernate.version}</version>
        <executions>
          <execution>
            <id>enhance</id>
            <goals>
              <goal>enhance</goal>
            </goals>
            <configuration>
              <enableLazyInitialization>true</enableLazyInitialization>
              <enableDirtyTracking>true</enableDirtyTracking>
              <enableAssociationManagement>true</enableAssociationManagement>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!--
        Spring Boot: Packaging and running
        More: https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/htmlsingle/
      -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
            </exclude>
          </excludes>
          <profiles>
            <profile>dev</profile>
          </profiles>
        </configuration>
      </plugin>

      <!--
        Failsafe: Integration tests
        More: https://maven.apache.org/surefire/maven-failsafe-plugin/
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.5.2</version>
        <executions>
          <execution>
            <id>integration-tests</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <argLine>@{argLine} -Xmx1024m</argLine>
              <useSystemClassLoader>false</useSystemClassLoader>
              <skipTests>${skip.integration.tests}</skipTests>
              <includes>
                <include>**/*IntegrationTest.java</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!--
        Surefire: Unit tests
        More: https://maven.apache.org/surefire/maven-surefire-plugin/
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.5.2</version>
        <configuration>
          <argLine>@{argLine} -Xmx1024m</argLine>
          <skipTests>${skip.unit.tests}</skipTests>
          <excludes>
            <exclude>**/*IntegrationTest.java</exclude>
          </excludes>
        </configuration>
      </plugin>

      <!--
        Jacoco: coverage
        More: https://central.sonatype.com/artifact/org.jacoco/jacoco-maven-plugin
      -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.12</version>
        <configuration>
          <skip>${jacoco.skip}</skip>
          <excludes>
            <exclude>**/configuration/**</exclude>
            <exclude>**/dto/**</exclude>
            <exclude>**/entity/**</exclude>
            <exclude>**/exception/**</exclude>
            <exclude>**/job/**</exclude>
            <exclude>**/*$*Builder*</exclude>
            <exclude>**/ResultsApplication.*</exclude>
            <exclude>**/*Constants.*</exclude>
            <exclude>**/security/*Converter.*</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <id>pre-unit-test</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${jacoco.output.data}/jacoco-ut.exec</destFile>
            </configuration>
          </execution>
          <execution>
            <id>post-unit-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${jacoco.output.data}/jacoco-ut.exec</dataFile>
              <outputDirectory>${jacoco.output.data}/jacoco-ut</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>pre-integration-test</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>prepare-agent-integration</goal>
            </goals>
            <configuration>
              <destFile>${jacoco.output.data}/jacoco-it.exec</destFile>
            </configuration>
          </execution>
          <execution>
            <id>post-integration-test</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>report-integration</goal>
            </goals>
            <configuration>
              <dataFile>${jacoco.output.data}/jacoco-it.exec</dataFile>
              <outputDirectory>${jacoco.output.data}/jacoco-it</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>merge-unit-and-integration</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>merge</goal>
            </goals>
            <configuration>
              <fileSets>
                <fileSet>
                  <directory>${jacoco.output.data}</directory>
                  <includes>
                    <include>*.exec</include>
                  </includes>
                </fileSet>
              </fileSets>
              <destFile>${project.build.directory}/jacoco.exec</destFile>
            </configuration>
          </execution>
          <execution>
            <id>merged-reports</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/jacoco.exec</dataFile>
              <outputDirectory>${jacoco.output.data}/merged-test-report</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>coverage-check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <rules>
                <rule>
                  <element>BUNDLE</element>
                  <limits>
                    <limit>
                      <counter>LINE</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>85%</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!--
        Enforcer: JDK Version and dependencies check
        More: https://maven.apache.org/enforcer/maven-enforcer-plugin/
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.5.0</version>
        <executions>
          <execution>
            <id>default-cli</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <dependencyConvergence />
                <requireMavenVersion>
                  <version>[3.2,)</version>
                  <message>Invalid Maven version. It should be at least 3.2</message>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>17</version>
                  <message>Invalid Java Version. It should be at least 17</message>
                </requireJavaVersion>
                <requireNoRepositories>
                  <allowedRepositories>
                    <id>central</id>
                  </allowedRepositories>
                  <allowedPluginRepositories>
                    <id>central</id>
                  </allowedPluginRepositories>
                </requireNoRepositories>
                <requireReleaseDeps>
                  <message>No Snapshots Allowed in releases!</message>
                  <onlyWhenRelease>true</onlyWhenRelease>
                </requireReleaseDeps>
                <banDuplicatePomDependencyVersions/>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!--
        Checkstyle: enforces formatting and code styling
        More: https://maven.apache.org/plugins/maven-checkstyle-plugin/
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.6.0</version>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>10.21.1</version>
          </dependency>
        </dependencies>
        <configuration>
          <skip>${checkstyle.skip}</skip>
          <failsOnError>${checkstyle.failsOnError}</failsOnError>
          <includeTestSourceDirectory>
            ${checkstyle.includeTestSourceDirectory}
          </includeTestSourceDirectory>
          <configLocation>.mvn/google_checks.xml</configLocation>
          <consoleOutput>true</consoleOutput>
          <linkXRef>false</linkXRef>
        </configuration>
        <executions>
          <execution>
            <id>validate</id>
            <phase>checkstyle</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.nimbusds</groupId>
        <artifactId>nimbus-jose-jwt</artifactId>
        <version>9.48</version>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>testcontainers-bom</artifactId>
        <version>${testcontainers.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
</project>
