apiVersion: template.openshift.io/v1
kind: Template
parameters:
  - name: NAME
    description: Module name
    value: nr-silva
  - name: COMPONENT
    description: Component name
    value: backend
  - name: ZONE
    description: Deployment zone, e.g. pr-### or prod
    required: true
  - name: IMAGE_TAG
    description: Image tag to use
    value: latest
  - name: DOMAIN
    value: apps.silver.devops.gov.bc.ca
  - name: CPU_REQUEST
    value: "30m"
  - name: MEMORY_REQUEST
    value: "350Mi"
  - name: CPU_LIMIT
    value: "100m"
  - name: MEMORY_LIMIT
    value: "500Mi"
  - name: MIN_REPLICAS
    description: The minimum amount of replicas for the horizontal pod autoscaler.
    value: "3"
  - name: MAX_REPLICAS
    description: The maximum amount of replicas for the horizontal pod autoscaler.
    value: "5"
  - name: TAG
    description: Image tag; e.g. PR number, latest or prod
    required: true
  - name: REGISTRY
    description: Container registry to import from (internal is image-registry.openshift-image-registry.svc:5000)
    value: ghcr.io
  - name: ORG
    description: Organization name, e.g. bcgov
    value: bcgov
  - name: DB_POOL_CONN_TIMEOUT
    description: Maximum number of milliseconds that a client will wait for a connection from the pool.
    value: "90000"
  - name: DB_POOL_IDLE_TIMEOUT
    description: Maximum amount of milliseconds that a connection is allowed to sit idle in the pool.
    value: "60000"
  - name: DB_POOL_MAX_LIFETIME
    description: Maximum lifetime of a connection in the pool.
    value: "120000"
  - name: DB_POOL_MAX_SIZE
    description: Maximum number of connections per pod
    value: "1"
  - name: DB_POOL_MIN_IDLE
    description: Minimum number of connections per pod
    value: "1"
  - name: RESULTS_ENV_OPENSEARCH
    description: Environment name for OpenSearch. # One of: development, test, production
    required: true
    value: development
  - name: DATABASE_HOST
    description: Where the database is hosted
    value: nrcdb03.bcgov
  - name: DATABASE_PORT
    description: The port to be used for the connection to the database
    value: "1543"
  - name: SERVICE_NAME
    description: The database's name
    value: dbq01.nrs.bcgov
  - name: ORACLEDB_KEYSTORE
    description: Keystore location path
    value: /app/jssecacerts
  - name: AWS_COGNITO_ISSUER_URI
    description: AWS Cognito JWT Server URI
    required: true
  - name: DASHBOARD_JOB_IDIR_USERS
    description: List of IDIR usernames allowed to manually trigger jobs
    required: true
  - name: ALLOWED_ORIGINS
    description: Sets all the allowed request origins
    value: "http://localhost:300*,https://*.apps.silver.devops.gov.bc.ca"
objects:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: "${NAME}-${ZONE}"
      name: "${NAME}-${ZONE}-${COMPONENT}"
    spec:
      replicas: 1
      selector:
        deployment: "${NAME}-${ZONE}-${COMPONENT}"
      strategy:
        type: RollingUpdate
      template:
        metadata:
          labels:
            app: "${NAME}-${ZONE}"
            deployment: "${NAME}-${ZONE}-${COMPONENT}"
        spec:
          containers:
            - name: ${NAME}-${ZONE}
              image: ${REGISTRY}/${ORG}/${NAME}/${COMPONENT}:${TAG}
              imagePullPolicy: Always
              volumeMounts:
                - name: ${NAME}-${ZONE}-fluentbit-logs
                  mountPath: /logs
              env:
                - name: JAVA_OPTS
                  value: "-Xms256m"
                - name: DB_POOL_CONN_TIMEOUT
                  value: ${DB_POOL_CONN_TIMEOUT}
                - name: DB_POOL_IDLE_TIMEOUT
                  value: ${DB_POOL_IDLE_TIMEOUT}
                - name: DB_POOL_MAX_SIZE
                  value: ${DB_POOL_MAX_SIZE}
                - name: DB_POOL_MIN_IDLE
                  value: ${DB_POOL_MIN_IDLE}
                - name: DB_POOL_MAX_LIFETIME
                  value: ${DB_POOL_MAX_LIFETIME}
                - name: RESULTS_ENV_OPENSEARCH
                  value: ${RESULTS_ENV_OPENSEARCH}
                - name: DATABASE_HOST
                  value: ${DATABASE_HOST}
                - name: DATABASE_PORT
                  value: ${DATABASE_PORT}
                - name: SERVICE_NAME
                  value: ${SERVICE_NAME}
                - name: AWS_COGNITO_ISSUER_URI
                  value: ${AWS_COGNITO_ISSUER_URI}
                - name: DASHBOARD_JOB_IDIR_USERS
                  value: ${DASHBOARD_JOB_IDIR_USERS}
                - name: ALLOWED_ORIGINS
                  value: ${ALLOWED_ORIGINS}
                - name: DATABASE_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${ZONE}-${COMPONENT}
                      key: oracle-user
                - name: DATABASE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${ZONE}-${COMPONENT}
                      key: oracle-password
                - name: ORACLEDB_KEYSTORE
                  value: ${ORACLEDB_KEYSTORE}
                - name: POSTGRES_HOST
                  value: ${NAME}-${ZONE}-database
                - name: POSTGRES_DB
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${ZONE}-database
                      key: database-name
                - name: POSTGRES_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${ZONE}-database
                      key: database-password
                - name: POSTGRES_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${ZONE}-database
                      key: database-user
              resources:
                requests:
                  cpu: "${CPU_REQUEST}"
                  memory: "${MEMORY_REQUEST}"
                limits:
                  cpu: "${CPU_LIMIT}"
                  memory: "${MEMORY_LIMIT}"
              ports:
                - name: probe-port
                  containerPort: 8080
                  protocol: TCP
              startupProbe:
                httpGet:
                  path: /actuator/health
                  port: probe-port
                initialDelaySeconds: 120
                failureThreshold: 30
              readinessProbe:
                httpGet:
                  path: /actuator/health
                  port: probe-port
                failureThreshold: 5
              livenessProbe:
                httpGet:
                  path: /actuator/health
                  port: probe-port
                failureThreshold: 10
          volumes:
            - name: ${NAME}-${ZONE}-fluentbit-logs
              persistentVolumeClaim:
                claimName: ${NAME}-${ZONE}-fluentbit-logs
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: "${NAME}-${ZONE}"
      name: "${NAME}-${ZONE}-${COMPONENT}"
    spec:
      ports:
        - name: 8080-tcp
          protocol: TCP
          port: 80
          targetPort: 8080
      selector:
        deployment: "${NAME}-${ZONE}-${COMPONENT}"
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        app: "${NAME}-${ZONE}"
      name: "${NAME}-${ZONE}-${COMPONENT}"
    spec:
      host: "${NAME}-${ZONE}-${COMPONENT}.${DOMAIN}"
      port:
        targetPort: 8080-tcp
      to:
        kind: Service
        name: "${NAME}-${ZONE}-${COMPONENT}"
        weight: 100
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
  - apiVersion: autoscaling/v2
    kind: HorizontalPodAutoscaler
    metadata:
      labels:
        app: "${NAME}-${ZONE}"
      name: "${NAME}-${ZONE}-${COMPONENT}"
    spec:
      scaleTargetRef:
        apiVersion: apps.openshift.io/v1
        kind: Deployment
        name: "${NAME}-${ZONE}-${COMPONENT}"
      minReplicas: "${{MIN_REPLICAS}}"
      maxReplicas: "${{MAX_REPLICAS}}"
      metrics:
        - type: Resource
          resource:
            name: cpu
            target:
              type: Utilization
              averageUtilization: 100
