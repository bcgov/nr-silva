apiVersion: template.openshift.io/v1
kind: Template
parameters:
  - name: NAME
    description: Module name
    value: nr-silva
  - name: COMPONENT
    description: Component name
    value: backend
  - name: ZONE
    description: Deployment zone, e.g. pr-### or prod
    required: true
  - name: IMAGE_TAG
    description: Image tag to use
    value: latest
  - name: DOMAIN
    value: apps.silver.devops.gov.bc.ca
  - name: CPU_REQUEST
    value: "500m"
  - name: MEMORY_REQUEST
    value: "350Mi"
  - name: MIN_REPLICAS
    description: The minimum amount of replicas for the horizontal pod autoscaler.
    value: "3"
  - name: MAX_REPLICAS
    description: The maximum amount of replicas for the horizontal pod autoscaler.
    value: "5"
  - name: TAG
    description: Image tag; e.g. PR number, latest or prod
    required: true
  - name: REGISTRY
    description: Container registry to import from (internal is image-registry.openshift-image-registry.svc:5000)
    value: ghcr.io
  - name: ORG
    description: Organization name, e.g. bcgov
    value: bcgov
  - name: DB_POOL_CONN_TIMEOUT
    description: Maximum number of milliseconds that a client will wait for a connection from the pool.
    value: "90000"
  - name: DB_POOL_IDLE_TIMEOUT
    description: Maximum amount of milliseconds that a connection is allowed to sit idle in the pool.
    value: "60000"
  - name: DB_POOL_MAX_LIFETIME
    description: Maximum lifetime of a connection in the pool.
    value: "120000"
  - name: DB_POOL_MAX_SIZE
    description: Maximum number of connections per pod
    value: "1"
  - name: DB_POOL_MIN_IDLE
    description: Minimum number of connections per pod
    value: "1"
  - name: RESULTS_ENV_OPENSEARCH
    description: Environment name for OpenSearch. # One of: development, test, production
    required: true
    value: development
  - name: DATABASE_HOST
    description: Where the database is hosted
    value: nrcdb03.bcgov
  - name: DATABASE_PORT
    description: The port to be used for the connection to the database
    value: "1543"
  - name: SERVICE_NAME
    description: The database's name
    value: dbq01.nrs.bcgov
  - name: ORACLEDB_KEYSTORE
    description: Keystore location path
    value: /app/jssecacerts
  - name: AWS_COGNITO_ISSUER_URI
    description: AWS Cognito JWT Server URI
    required: true
  - name: DASHBOARD_JOB_IDIR_USERS
    description: List of IDIR usernames allowed to manually trigger jobs
    required: true
  - name: ALLOWED_ORIGINS
    description: Sets all the allowed request origins
    required: true
  - name: WMS_LAYERS_WHITELIST_USERS
    description: List of users that can see active layers on the map view
    required: true
  - name: OPENING_SEARCH_ORG_UNITS
    description: List of Org Units code to be displayed as options for the opening search
    value: DCK,DSQ,DVA,DKM,DSC,DFN,DSI,DCR,DMK,DQC,DKA,DCS,DOS,DSE,DCC,DMH,DQU,DNI,DND,DRM,DPG,DSS,DPC
  - name: RANDOM_EXPRESSION
    description: Random expression to make sure deployments update
    from: "[a-zA-Z0-9]{32}"
    generate: expression
  - name: CERT_PVC_SIZE
    description: The amount of storage the cert PVC should have
    value: 25Mi
  - name: VAULT_ROLE
    description: The role to use for the vault
    value: d41ea0-nonprod
  - name: VAULT_ENV
    description: The environment to use for the vault
    value: nr-silva-dev
objects:
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      labels:
        app: ${NAME}-${ZONE}
      name: ${NAME}-${ZONE}-certs
    spec:
      accessModes:
        - ReadWriteMany
      resources:
        requests:
          storage: ${CERT_PVC_SIZE}
      storageClassName: netapp-file-standard
  - kind: Deployment    
    apiVersion: apps/v1
    metadata:
      labels:
        app: "${NAME}-${ZONE}"
      name: ${NAME}-${ZONE}-${COMPONENT}
    spec:
      replicas: 1
      selector:
        matchLabels:
          deployment: ${NAME}-${ZONE}-${COMPONENT}
      strategy:
        type: RollingUpdate
      template:
        metadata:
          labels:
            app: ${NAME}-${ZONE}
            deployment: ${NAME}-${ZONE}-${COMPONENT}
          annotations:
            vault.hashicorp.com/agent-inject: 'true'
            vault.hashicorp.com/agent-inject-token: 'false'
            vault.hashicorp.com/agent-pre-populate-only: 'true'
            vault.hashicorp.com/agent-init-first: 'true'
            vault.hashicorp.com/auth-path: auth/k8s-silver
            vault.hashicorp.com/namespace: platform-services
            vault.hashicorp.com/role: ${VAULT_ROLE}
            vault.hashicorp.com/agent-inject-secret-test_secret: ${VAULT_ROLE}/${VAULT_ENV}
            vault.hashicorp.com/agent-inject-template-test_secret: |
              {{- with secret "${VAULT_ROLE}/${VAULT_ENV}" -}}
              {{- range $k, $v := .Data.data }}
              export {{ $k }}={{ $v }}{{ end -}}
              {{- end  }}
            vault.hashicorp.com/agent-inject-command-test_secret: "source /vault/secrets/test_secret"
        spec:
          serviceAccountName: d41ea0-vault
          initContainers:
            - name: ${NAME}-${ZONE}-init
              image: ${REGISTRY}/bcgov/nr-forest-client-commons/certextractor:0.2.12
              imagePullPolicy: Always
              env:
                - name: ORACLEDB_HOST
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${ZONE}-${COMPONENT}
                      key: oracle-host
                - name: ORACLEDB_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${ZONE}-${COMPONENT}
                      key: oracle-secret
                - name: ORACLEDB_PORT
                  value: ${DATABASE_PORT}
              volumeMounts:
                - name: ${NAME}-${ZONE}-certs
                  mountPath: /cert
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
          containers:
            - name: ${NAME}-${ZONE}-${COMPONENT}
              image: ${REGISTRY}/${ORG}/${NAME}/${COMPONENT}:${TAG}
              imagePullPolicy: Always
              volumeMounts:
                - name: ${NAME}-${ZONE}-certs
                  mountPath: /cert
              env:
                - name: JAVA_OPTS
                  value: "-Xms256m"
                - name: DB_POOL_CONN_TIMEOUT
                  value: ${DB_POOL_CONN_TIMEOUT}
                - name: DB_POOL_IDLE_TIMEOUT
                  value: ${DB_POOL_IDLE_TIMEOUT}
                - name: DB_POOL_MAX_SIZE
                  value: ${DB_POOL_MAX_SIZE}
                - name: DB_POOL_MIN_IDLE
                  value: ${DB_POOL_MIN_IDLE}
                - name: DB_POOL_MAX_LIFETIME
                  value: ${DB_POOL_MAX_LIFETIME}
                - name: RESULTS_ENV_OPENSEARCH
                  value: ${RESULTS_ENV_OPENSEARCH}
                - name: DATABASE_HOST
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${ZONE}-${COMPONENT}
                      key: oracle-host
                - name: DATABASE_PORT
                  value: ${DATABASE_PORT}
                - name: SERVICE_NAME
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${ZONE}-${COMPONENT}
                      key: oracle-service
                - name: AWS_COGNITO_ISSUER_URI
                  value: ${AWS_COGNITO_ISSUER_URI}
                - name: DASHBOARD_JOB_IDIR_USERS
                  value: ${DASHBOARD_JOB_IDIR_USERS}
                - name: ALLOWED_ORIGINS
                  value: ${ALLOWED_ORIGINS}
                - name: WMS_LAYERS_WHITELIST_USERS
                  value: ${WMS_LAYERS_WHITELIST_USERS}
                - name: OPENING_SEARCH_ORG_UNITS
                  value: ${OPENING_SEARCH_ORG_UNITS}
                - name: FORESTCLIENTAPI_KEY
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${ZONE}-${COMPONENT}
                      key: forest-client-api-key
                - name: DATABASE_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${ZONE}-${COMPONENT}
                      key: oracle-user
                - name: DATABASE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${ZONE}-${COMPONENT}
                      key: oracle-password
                - name: ORACLEDB_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${ZONE}-${COMPONENT}
                      key: oracle-secret
                - name: ORACLEDB_KEYSTORE
                  value: /cert/jssecacerts
                - name: POSTGRES_HOST
                  value: ${NAME}-${ZONE}-database
                - name: POSTGRES_DB
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${ZONE}-database
                      key: database-name
                - name: POSTGRES_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${ZONE}-database
                      key: database-password
                - name: POSTGRES_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${ZONE}-database
                      key: database-user
                - name: SELF_URI
                  value: https://${NAME}-${ZONE}-${COMPONENT}.${DOMAIN}
                - name: RANDOM_EXPRESSION
                  value: ${RANDOM_EXPRESSION}
              resources:
                requests:
                  cpu: "${CPU_REQUEST}"
                  memory: "${MEMORY_REQUEST}"
              ports:
                - name: probe-port
                  containerPort: 8080
                  protocol: TCP
              startupProbe:
                httpGet:
                  path: /actuator/health
                  port: probe-port
                initialDelaySeconds: 15
                failureThreshold: 30
              readinessProbe:
                httpGet:
                  path: /actuator/health
                  port: probe-port
                failureThreshold: 5
              livenessProbe:
                httpGet:
                  path: /actuator/health
                  port: probe-port
                failureThreshold: 10
          volumes:
            - name: ${NAME}-${ZONE}-certs
              persistentVolumeClaim:
                claimName: ${NAME}-${ZONE}-certs
  - kind: Service
    apiVersion: v1
    metadata:
      labels:
        app: "${NAME}-${ZONE}"
      name: "${NAME}-${ZONE}-${COMPONENT}"
    spec:
      ports:
        - name: 8080-tcp
          protocol: TCP
          port: 80
          targetPort: 8080
      selector:
        deployment: "${NAME}-${ZONE}-${COMPONENT}"
  - kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      labels:
        app: "${NAME}-${ZONE}"
      name: "${NAME}-${ZONE}-${COMPONENT}"
      annotations:
        haproxy.router.openshift.io/rate-limit-connections: "true"
        haproxy.router.openshift.io/rate-limit-connections.rate-http: "150"
        haproxy.router.openshift.io/rate-limit-connections.rate-tcp: "75"
    spec:
      host: "${NAME}-${ZONE}-${COMPONENT}.${DOMAIN}"
      port:
        targetPort: 8080-tcp
      to:
        kind: Service
        name: "${NAME}-${ZONE}-${COMPONENT}"
        weight: 100
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
  - kind: HorizontalPodAutoscaler
    apiVersion: autoscaling/v2
    metadata:
      labels:
        app: ${NAME}-${ZONE}
      name: ${NAME}-${ZONE}-${COMPONENT}
    spec:
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: ${NAME}-${ZONE}-${COMPONENT}
      minReplicas: "${{MIN_REPLICAS}}"
      maxReplicas: "${{MAX_REPLICAS}}"
      metrics:
        - type: Resource
          resource:
            name: cpu
            target:
              type: Utilization
              averageUtilization: 100
