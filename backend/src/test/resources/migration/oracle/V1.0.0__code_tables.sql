CREATE TABLE THE.OPEN_CATEGORY_CODE (
	OPEN_CATEGORY_CODE VARCHAR2(7),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT OCC_PK PRIMARY KEY (OPEN_CATEGORY_CODE),
	CONSTRAINT SYS_C007655_OCC_CT CHECK ("OPEN_CATEGORY_CODE" IS NOT NULL),
	CONSTRAINT SYS_C007656_OCC_CT CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C007657_OCC_CT CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C007658_OCC_CT CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C007659_OCC_CT CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);

CREATE TABLE THE.AGE_CLASS_CODE (
	AGE_CLASS_CODE VARCHAR2(1),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT ACC_PK PRIMARY KEY (AGE_CLASS_CODE),
	CONSTRAINT SYS_C007687_ACC_CT CHECK ("AGE_CLASS_CODE" IS NOT NULL),
	CONSTRAINT SYS_C007689_ACC_CT CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C007690_ACC_CT CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C007691_ACC_CT CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C007692_ACC_CT CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);

CREATE TABLE THE.HEIGHT_CLASS_CODE (
	HEIGHT_CLASS_CODE VARCHAR2(1),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT HCC_PK PRIMARY KEY (HEIGHT_CLASS_CODE),
	CONSTRAINT SYS_C0039387_HCC_CT CHECK ("HEIGHT_CLASS_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0039388_HCC_CT CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C0039389_HCC_CT CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0039390_HCC_CT CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0039391_HCC_CT CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);

CREATE TABLE THE.OPENING_STATUS_CODE (
	OPENING_STATUS_CODE VARCHAR2(3),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT OSC_PK PRIMARY KEY (OPENING_STATUS_CODE),
	CONSTRAINT SYS_C008336_OSC_CT CHECK ("OPENING_STATUS_CODE" IS NOT NULL),
	CONSTRAINT SYS_C008337_OSC_CT CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C008338_OSC_CT CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C008339_OSC_CT CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C008340_OSC_CT CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);

CREATE TABLE THE.STOCKING_CLASS_CODE (
	STOCKING_CLASS_CODE VARCHAR2(1),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT SCC1_PK PRIMARY KEY (STOCKING_CLASS_CODE),
	CONSTRAINT SYS_C008214_SCC1_CT CHECK ("STOCKING_CLASS_CODE" IS NOT NULL),
	CONSTRAINT SYS_C008215_SCC1_CT CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C008216_SCC1_CT CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C008217_SCC1_CT CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C008218_SCC1_CT CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);

CREATE TABLE THE.SITE_CLASS_CODE (
	SITE_CLASS_CODE VARCHAR2(1),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT SITE_CLASS_CODE_PK PRIMARY KEY (SITE_CLASS_CODE),
	CONSTRAINT SYS_C008260_SCC_CT CHECK ("SITE_CLASS_CODE" IS NOT NULL),
	CONSTRAINT SYS_C008262_SCC_CT CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C008264_SCC_CT CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C008265_SCC_CT CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C008266_SCC_CT CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);

CREATE TABLE THE.SITE_INDEX_SOURCE_CODE (
	SITE_INDEX_SOURCE_CODE VARCHAR2(1),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT SISC_PK PRIMARY KEY (SITE_INDEX_SOURCE_CODE),
	CONSTRAINT SYS_C008567_SISC_CT CHECK ("SITE_INDEX_SOURCE_CODE" IS NOT NULL),
	CONSTRAINT SYS_C008569_SISC_CT CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C008571_SISC_CT CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C008572_SISC_CT CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C008573_SISC_CT CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);

CREATE TABLE THE.STOCKING_STATUS_CODE (
	STOCKING_STATUS_CODE VARCHAR2(3),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT SSC6_PK PRIMARY KEY (STOCKING_STATUS_CODE),
	CONSTRAINT SYS_C007771_SSC6_CT CHECK ("STOCKING_STATUS_CODE" IS NOT NULL),
	CONSTRAINT SYS_C007772_SSC6_CT CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C007773_SSC6_CT CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C007774_SSC6_CT CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C007775_SSC6_CT CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);

CREATE TABLE THE.TSB_NUMBER_CODE (
	TSB_NUMBER_CODE VARCHAR2(3),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT SYS_C0016369_TSBNC_CT CHECK ("TSB_NUMBER_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0016370_TSBNC_CT CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C0016371_TSBNC_CT CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0016372_TSBNC_CT CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0016374_TSBNC_CT CHECK ("UPDATE_TIMESTAMP" IS NOT NULL),
	CONSTRAINT TSBNC_PK PRIMARY KEY (TSB_NUMBER_CODE)
);

CREATE TABLE THE.TREE_SPECIES_CODE (
	TREE_SPECIES_CODE VARCHAR2(3),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT SYS_C0031659_TSC_CT CHECK ("TREE_SPECIES_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0031660_TSC_CT CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C0031661_TSC_CT CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0031662_TSC_CT CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0031663_TSC_CT CHECK ("UPDATE_TIMESTAMP" IS NOT NULL),
	CONSTRAINT TSC_PK PRIMARY KEY (TREE_SPECIES_CODE)
);

CREATE TABLE THE.RESULTS_AUDIT_ACTION_CODE (
	RESULTS_AUDIT_ACTION_CODE VARCHAR2(3),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT RAAC_PK PRIMARY KEY (RESULTS_AUDIT_ACTION_CODE),
	CONSTRAINT SYS_C007760_RAAC_CT CHECK ("RESULTS_AUDIT_ACTION_CODE" IS NOT NULL),
	CONSTRAINT SYS_C007761_RAAC_CT CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C007762_RAAC_CT CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C007763_RAAC_CT CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C007764_RAAC_CT CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);

CREATE TABLE THE.SILV_MILESTONE_TYPE_CODE (
  SILV_MILESTONE_TYPE_CODE VARCHAR2(3) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
	CONSTRAINT SMTC2_PK PRIMARY KEY (SILV_MILESTONE_TYPE_CODE)
);

CREATE TABLE THE.FILE_CLIENT_TYPE_CODE (
	FILE_CLIENT_TYPE_CODE VARCHAR2(1),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT FCTC_PK PRIMARY KEY (FILE_CLIENT_TYPE_CODE),
	CONSTRAINT SYS_C0010282 CHECK ("FILE_CLIENT_TYPE_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0010285 CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C0010288 CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0010291 CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0010294 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);

CREATE TABLE THE.FILE_TYPE_CODE (
	FILE_TYPE_CODE VARCHAR2(10),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT FT_CD_PK PRIMARY KEY (FILE_TYPE_CODE),
	CONSTRAINT SYS_C0027750 CHECK ("FILE_TYPE_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0027753 CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C0027754 CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0027755 CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0027756 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);

CREATE TABLE THE.TENURE_FILE_STATUS_CODE (
	TENURE_FILE_STATUS_CODE VARCHAR2(3),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT SYS_C0011104 CHECK ("TENURE_FILE_STATUS_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0011107 CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C0011109 CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0011111 CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0011112 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL),
	CONSTRAINT TFSCD_PK PRIMARY KEY (TENURE_FILE_STATUS_CODE)
);

CREATE TABLE THE.CUT_BLOCK_CLIENT_TYPE_CODE (
	CUT_BLOCK_CLIENT_TYPE_CODE VARCHAR2(1),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT CBCTC_PK PRIMARY KEY (CUT_BLOCK_CLIENT_TYPE_CODE),
	CONSTRAINT SYS_C0013649 CHECK ("CUT_BLOCK_CLIENT_TYPE_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0013651 CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C0013653 CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0013655 CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0013657 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);

CREATE TABLE THE.REFOREST_DECLARE_TYPE_CODE (
  REFOREST_DECLARE_TYPE_CODE VARCHAR2(3) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
	CONSTRAINT REDTC_PK PRIMARY KEY (REFOREST_DECLARE_TYPE_CODE) USING INDEX  ENABLE
);

CREATE TABLE THE.CUT_REGULATION_CODE (
  CUT_REGULATION_CODE VARCHAR2(3) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
	CONSTRAINT CURC_PK PRIMARY KEY (CUT_REGULATION_CODE) USING INDEX  ENABLE
);

CREATE TABLE THE.BLOCK_STATUS_CODE (
  BLOCK_STATUS_CODE VARCHAR2(3) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
  CONSTRAINT BSCD_PK PRIMARY KEY (BLOCK_STATUS_CODE) USING INDEX ENABLE
);

CREATE TABLE THE.MGMT_UNIT_TYPE_CODE (
  MGMT_UNIT_TYPE_CODE VARCHAR2(1) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
	CONSTRAINT MUTC_PK PRIMARY KEY (MGMT_UNIT_TYPE_CODE) USING INDEX ENABLE
);

CREATE TABLE THE.CASCADE_SPLIT_CODE (
  CASCADE_SPLIT_CODE VARCHAR2(1) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
	CONSTRAINT CASCD_PK PRIMARY KEY (CASCADE_SPLIT_CODE) USING INDEX
);

CREATE TABLE THE.QUOTA_TYPE_CODE (
  QUOTA_TYPE_CODE VARCHAR2(1) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
	CONSTRAINT QTCD_PK PRIMARY KEY (QUOTA_TYPE_CODE) USING INDEX
);

CREATE TABLE THE.SALVAGE_TYPE_CODE (
  SALVAGE_TYPE_CODE VARCHAR2(3) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
	CONSTRAINT SALVTCD_PK PRIMARY KEY (SALVAGE_TYPE_CODE) USING INDEX
);

CREATE TABLE THE.CROWN_LANDS_REGION_CODE (
  CROWN_LANDS_REGION_CODE VARCHAR2(1) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
	CONSTRAINT CLRC_PK PRIMARY KEY (CROWN_LANDS_REGION_CODE) USING INDEX
 );

CREATE TABLE THE.MARKING_METHOD_CODE (
  MARKING_METHOD_CODE VARCHAR2(1) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
	CONSTRAINT MMCD_PK PRIMARY KEY (MARKING_METHOD_CODE) USING INDEX
);

CREATE TABLE THE.MARK_EXTENSION_REASON_CODE (
  MARK_EXTENSION_REASON_CODE VARCHAR2(1) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
	CONSTRAINT MERCD_PK PRIMARY KEY (MARK_EXTENSION_REASON_CODE) USING INDEX
);

CREATE TABLE THE.MARKING_INSTRUMENT_CODE (
  MARKING_INSTRUMENT_CODE VARCHAR2(1) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
	CONSTRAINT MICD_PK PRIMARY KEY (MARKING_INSTRUMENT_CODE) USING INDEX
);

CREATE TABLE THE.FIRE_HARVESTING_REASON_CODE (
  FIRE_HARVESTING_REASON_CODE VARCHAR2(10) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
	CONSTRAINT FHRC_PK PRIMARY KEY (FIRE_HARVESTING_REASON_CODE) USING INDEX
);

CREATE TABLE THE.HARVEST_TYPE_CODE (
  HARVEST_TYPE_CODE VARCHAR2(1) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
  CONSTRAINT HTC_PK PRIMARY KEY (HARVEST_TYPE_CODE)USING INDEX
);

CREATE TABLE THE.HARVEST_AUTH_STATUS_CODE (
  HARVEST_AUTH_STATUS_CODE VARCHAR2(3) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
 CONSTRAINT HASC_PK PRIMARY KEY (HARVEST_AUTH_STATUS_CODE) USING INDEX
);

CREATE TABLE THE.HARVEST_AUTH_EXTEND_REAS_CODE (
  HARVEST_AUTH_EXTEND_REAS_CODE VARCHAR2(1) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
 CONSTRAINT HAERC_PK PRIMARY KEY (HARVEST_AUTH_EXTEND_REAS_CODE) USING INDEX
);

CREATE TABLE THE.LICENCE_TO_CUT_CODE (
  LICENCE_TO_CUT_CODE VARCHAR2(2) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
	CONSTRAINT LTCCD_PK PRIMARY KEY (LICENCE_TO_CUT_CODE) USING INDEX
);

CREATE TABLE THE.SILV_RELIEF_APPL_STATUS_CODE (
  SILV_RELIEF_APPL_STATUS_CODE VARCHAR2(3) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
 CONSTRAINT SRASCD_PK PRIMARY KEY (SILV_RELIEF_APPL_STATUS_CODE) USING INDEX
);

CREATE TABLE THE.MIME_TYPE_CODE (
  MIME_TYPE_CODE VARCHAR2(3) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
	 PRIMARY KEY (MIME_TYPE_CODE) USING INDEX
);

CREATE TABLE THE.STANDARDS_REGIME_STATUS_CODE (
  STANDARDS_REGIME_STATUS_CODE VARCHAR2(3) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
	CONSTRAINT SRSC_PK PRIMARY KEY (STANDARDS_REGIME_STATUS_CODE) USING INDEX
);

CREATE TABLE THE.SILV_STATUTE_CODE (
  SILV_STATUTE_CODE VARCHAR2(3) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
  CONSTRAINT SSTCD_PK PRIMARY KEY (SILV_STATUTE_CODE) USING INDEX
);

CREATE TABLE THE.SILV_RESERVE_OBJECTIVE_CODE (
  SILV_RESERVE_OBJECTIVE_CODE VARCHAR2(3) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
	CONSTRAINT SROC_PK PRIMARY KEY (SILV_RESERVE_OBJECTIVE_CODE) USING INDEX
);

CREATE TABLE THE.TREE_COVER_PATTERN_CODE (
  TREE_COVER_PATTERN_CODE VARCHAR2(1) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
	CONSTRAINT TCPC_PK PRIMARY KEY (TREE_COVER_PATTERN_CODE) USING INDEX
);

CREATE TABLE THE.STOCKING_TYPE_CODE (
  STOCKING_TYPE_CODE VARCHAR2(3) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
	CONSTRAINT STC3_PK PRIMARY KEY (STOCKING_TYPE_CODE) USING INDEX
);

CREATE TABLE THE.SILV_RESERVE_CODE (
  SILV_RESERVE_CODE VARCHAR2(1) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
	CONSTRAINT SRC_PK PRIMARY KEY (SILV_RESERVE_CODE) USING INDEX
);

CREATE TABLE THE.DATA_SOURCE_CODE (
  DATA_SOURCE_CODE VARCHAR2(10) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
  CONSTRAINT DSC_PK PRIMARY KEY (DATA_SOURCE_CODE) USING INDEX
);

CREATE TABLE THE.SILV_TREE_SPECIES_CODE (
  SILV_TREE_SPECIES_CODE VARCHAR2(8) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
	CONSTRAINT STSC_PK PRIMARY KEY (SILV_TREE_SPECIES_CODE) USING INDEX
);

CREATE TABLE THE.SILV_SYSTEM_VARIANT_CODE (
  SILV_SYSTEM_VARIANT_CODE VARCHAR2(3) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
	CONSTRAINT SSVC_PK PRIMARY KEY (SILV_SYSTEM_VARIANT_CODE) USING INDEX
);

CREATE TABLE THE.SILV_TECHNIQUE_CODE (
  SILV_TECHNIQUE_CODE VARCHAR2(2) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
	CONSTRAINT STC_PK PRIMARY KEY (SILV_TECHNIQUE_CODE) USING INDEX
);

CREATE TABLE THE.DISTURBANCE_CODE (
  DISTURBANCE_CODE VARCHAR2(3) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
	CONSTRAINT DISTURBANCE_CODE_PK PRIMARY KEY (DISTURBANCE_CODE) USING INDEX
);

CREATE TABLE THE.SILV_FUND_SRCE_CODE (
  SILV_FUND_SRCE_CODE VARCHAR2(3) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
	CONSTRAINT TFC_PK PRIMARY KEY (SILV_FUND_SRCE_CODE) USING INDEX
);

CREATE TABLE THE.UNIT_BID_CODE (
  UNIT_BID_CODE VARCHAR2(3) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
  CONSTRAINT UBCD_PK PRIMARY KEY (UNIT_BID_CODE) USING INDEX
);

CREATE TABLE THE.SILV_PROJECT_STATUS_CODE (
  SILV_PROJECT_STATUS_CODE VARCHAR2(3) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
  CONSTRAINT PSCD_PK PRIMARY KEY (SILV_PROJECT_STATUS_CODE) USING INDEX
);

CREATE TABLE THE.SILV_BASE_CODE (
  SILV_BASE_CODE VARCHAR2(2) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
	CONSTRAINT SBC_PK PRIMARY KEY (SILV_BASE_CODE) USING INDEX
);

CREATE TABLE THE.CREW_CONTRACT_HIRE_CODE (
  CREW_CONTRACT_HIRE_CODE VARCHAR2(1) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
  CONSTRAINT CCHCD_PK PRIMARY KEY (CREW_CONTRACT_HIRE_CODE) USING INDEX
);

CREATE TABLE THE.SILV_CUT_PHASE_CODE (
  SILV_CUT_PHASE_CODE VARCHAR2(5) NOT NULL ENABLE,
 	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
 	EFFECTIVE_DATE DATE NOT NULL ENABLE,
 	EXPIRY_DATE DATE NOT NULL ENABLE,
 	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
 	CONSTRAINT SCPC_PK PRIMARY KEY (SILV_CUT_PHASE_CODE) USING INDEX
);

CREATE TABLE THE.SILV_OBJECTIVE_CODE (
	SILV_OBJECTIVE_CODE VARCHAR2(3) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
	CONSTRAINT SOC_PK PRIMARY KEY (SILV_OBJECTIVE_CODE) USING INDEX
);

CREATE TABLE THE.SILV_METHOD_CODE (
  SILV_METHOD_CODE VARCHAR2(5) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
	CONSTRAINT SMC_PK PRIMARY KEY (SILV_METHOD_CODE) USING INDEX
);

CREATE TABLE THE.SILV_ACTIVITY_MEASUREMENT_CODE (
  SILV_ACTIVITY_MEASUREMENT_CODE VARCHAR2(3) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
	CONSTRAINT SAM_PK PRIMARY KEY (SILV_ACTIVITY_MEASUREMENT_CODE) USING INDEX
);

CREATE TABLE THE.SILV_SYSTEM_CODE (
  SILV_SYSTEM_CODE VARCHAR2(5) NOT NULL ENABLE,
	DESCRIPTION VARCHAR2(120) NOT NULL ENABLE,
	EFFECTIVE_DATE DATE NOT NULL ENABLE,
	EXPIRY_DATE DATE NOT NULL ENABLE,
	UPDATE_TIMESTAMP DATE NOT NULL ENABLE,
	CONSTRAINT SSC_PK PRIMARY KEY (SILV_SYSTEM_CODE) USING INDEX
);

CREATE TABLE THE.SILV_COMMENT_TYPE_CODE (
	SILV_COMMENT_TYPE_CODE VARCHAR2(8),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT SCTC_PK PRIMARY KEY (SILV_COMMENT_TYPE_CODE),
	CONSTRAINT SYS_C008864 CHECK ("SILV_COMMENT_TYPE_CODE" IS NOT NULL),
	CONSTRAINT SYS_C008865 CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C008866 CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C008867 CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C008868 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);

CREATE TABLE THE.SILV_COMMENT_SOURCE_CODE (
	SILV_COMMENT_SOURCE_CODE VARCHAR2(4),
	DESCRIPTION VARCHAR2(120),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT SCSC_PK PRIMARY KEY (SILV_COMMENT_SOURCE_CODE),
	CONSTRAINT SYS_C008895 CHECK ("SILV_COMMENT_SOURCE_CODE" IS NOT NULL),
	CONSTRAINT SYS_C008900 CHECK ("DESCRIPTION" IS NOT NULL),
	CONSTRAINT SYS_C008904 CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C008909 CHECK ("EXPIRY_DATE" IS NOT NULL),
	CONSTRAINT SYS_C008913 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);

-- Org unit doesn't belong to silva, but is accessed by the application
CREATE TABLE THE.ORG_UNIT (
	ORG_UNIT_NO NUMBER(10,0),
	ORG_UNIT_CODE VARCHAR2(6),
	ORG_UNIT_NAME VARCHAR2(100),
	LOCATION_CODE VARCHAR2(3),
	AREA_CODE VARCHAR2(3),
	TELEPHONE_NO VARCHAR2(7),
	ORG_LEVEL_CODE VARCHAR2(1),
	OFFICE_NAME_CODE VARCHAR2(2),
	ROLLUP_REGION_NO NUMBER(10,0),
	ROLLUP_REGION_CODE VARCHAR2(6),
	ROLLUP_DIST_NO NUMBER(10,0),
	ROLLUP_DIST_CODE VARCHAR2(6),
	EFFECTIVE_DATE DATE,
	EXPIRY_DATE DATE,
	UPDATE_TIMESTAMP DATE,
	CONSTRAINT ORG_UNIT_PK PRIMARY KEY (ORG_UNIT_NO),
	CONSTRAINT SYS_C0035144_OU_CT CHECK ("ORG_UNIT_NO" IS NOT NULL),
	CONSTRAINT SYS_C0035146_OU_CT CHECK ("ORG_UNIT_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0035148_OU_CT CHECK ("ORG_UNIT_NAME" IS NOT NULL),
	CONSTRAINT SYS_C0035150_OU_CT CHECK ("LOCATION_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0035152_OU_CT CHECK ("AREA_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0035154_OU_CT CHECK ("TELEPHONE_NO" IS NOT NULL),
	CONSTRAINT SYS_C0035156_OU_CT CHECK ("ORG_LEVEL_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0035158_OU_CT CHECK ("OFFICE_NAME_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0035160_OU_CT CHECK ("ROLLUP_REGION_NO" IS NOT NULL),
	CONSTRAINT SYS_C0035162_OU_CT CHECK ("ROLLUP_REGION_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0035164_OU_CT CHECK ("ROLLUP_DIST_NO" IS NOT NULL),
	CONSTRAINT SYS_C0035166_OU_CT CHECK ("ROLLUP_DIST_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0035168_OU_CT CHECK ("EFFECTIVE_DATE" IS NOT NULL),
	CONSTRAINT SYS_C0035169_OU_CT CHECK ("EXPIRY_DATE" IS NOT NULL)
);
CREATE UNIQUE INDEX "I2$_ORG_UNIT" ON THE.ORG_UNIT (ORG_UNIT_CODE,ORG_UNIT_NO);
CREATE UNIQUE INDEX "I3$_ORG_UNIT" ON THE.ORG_UNIT (ORG_UNIT_CODE);
CREATE UNIQUE INDEX "I4$_ORG_UNIT" ON THE.ORG_UNIT (ORG_UNIT_NO,ORG_UNIT_CODE,ORG_UNIT_NAME,LOCATION_CODE,TELEPHONE_NO,ORG_LEVEL_CODE,OFFICE_NAME_CODE);
CREATE INDEX "I5$_ORG_UNIT" ON THE.ORG_UNIT (ROLLUP_DIST_CODE,ROLLUP_REGION_CODE);
CREATE INDEX "I6$_ORG_UNIT" ON THE.ORG_UNIT (ROLLUP_REGION_NO,ROLLUP_DIST_NO);
CREATE INDEX "I7$_ORG_UNIT" ON THE.ORG_UNIT (ROLLUP_REGION_CODE,ROLLUP_DIST_CODE);
CREATE UNIQUE INDEX "I8$_ORG_UNIT" ON THE.ORG_UNIT (ORG_UNIT_NO,ORG_UNIT_CODE);
CREATE UNIQUE INDEX "I9$_ORG_UNIT" ON THE.ORG_UNIT (ORG_UNIT_CODE,ORG_LEVEL_CODE,ORG_UNIT_NO,ORG_UNIT_NAME);