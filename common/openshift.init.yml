apiVersion: template.openshift.io/v1
kind: Template
parameters:
  - name: NAME
    description: Product name
    value: nr-silva
  - name: ZONE
    description: Deployment zone, e.g. pr-### or prod
    required: true
  - name: AWS_ACCESS_KEY_ID
    description: AWS Access Key ID
    required: true
  - name: AWS_ACCESS_KEY_SECRET
    description: AWS Access Key Secret
    required: true
  - name: AWS_KINESIS_STREAM
    description: AWS Kinesis stream name
    required: true
  - name: AWS_KINESIS_ROLE_ARN
    description: AWS Kinesis Role ARN
    required: true
objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      name: ${NAME}-${ZONE}-fluentbit
      labels:
        app: ${NAME}-${ZONE}
    stringData:
      aws-access-key-id: ${AWS_ACCESS_KEY_ID}
      aws-access-key-secret: ${AWS_ACCESS_KEY_SECRET}
      aws-kinesis-stream: ${AWS_KINESIS_STREAM}
      aws-kinesis-role-arn: ${AWS_KINESIS_ROLE_ARN}
  - apiVersion: v1
    kind: Secret
    metadata:
      name: ${NAME}-${ZONE}-backend
      labels:
        app: ${NAME}-${ZONE}
    stringData:
      oracle-user: ${ORACLE_DB_USER}
      oracle-password: ${ORACLE_DB_PASSWORD}
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-from-openshift-ingress
      labels:
        template: openshift-test
    spec:
      ingress:
        - from:
            - namespaceSelector:
                matchLabels:
                  network.openshift.io/policy-group: ingress
      policyTypes:
        - Ingress
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-same-namespace
      labels:
        template: nr-results-backend-network-security-policy
    spec:
      ingress:
        - from:
            - podSelector: {}
      policyTypes:
        - Ingress
