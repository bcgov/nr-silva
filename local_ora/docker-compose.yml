
x-var:
  - &ORACLE_USER
    THE
  - &ORACLE_PASSWORD
    default
  - &ORACLE_DATABASE
    DBDOCK_01
  - &ORACLE_HOST
    oracle-spar
  - &ORACLE_PORT
    1521
  - &ORACLE_FLYWAY_URL
    jdbc:oracle:thin:@//oracle-silva:1521/DBDOCK_01

x-oracle-vars: &oracle-vars
  ORACLE_DATABASE: *ORACLE_DATABASE
  ORACLE_PASSWORD: *ORACLE_PASSWORD
  ORACLE_HOST: *ORACLE_HOST
  APP_USER: *ORACLE_USER
  APP_USER_PASSWORD: *ORACLE_PASSWORD
  # used by the sync process
  ORACLE_SYNC_PASSWORD: *ORACLE_PASSWORD
  ORACLE_SYNC_USER: *ORACLE_USER
  FLYWAY_URL: *ORACLE_FLYWAY_URL

services:

  # Name of the Docker Compose service
  oracle-silva:
    # Docker Hub image (feel free to change the tag "latest" to any other available one)
    image: gvenzl/oracle-free:latest
    # Forward Oracle port to localhost
    container_name: oracle-silva
    ports:
      - "1521:1521"
    # Provide passwords and other environment variables to the container
    environment:
      <<: *oracle-vars
    # Customize healthcheck script options for startup
    healthcheck:
      test: ["CMD", "/opt/oracle/healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 10
    # Mount a local SQL file to initialize your schema at startup
    volumes:
      - oracle-data:/opt/oracle/oradata  # Mount the volume to the Oracle data directory
      - ./db_init/db_init.sql:/container-entrypoint-initdb.d/my-init.sql:ro

  oracle-migrations:
    image: flyway/flyway:10-alpine
    container_name: oracle-migrations
    command: info migrate info
    volumes:
      - "./migrations/sql:/flyway/sql:ro"
    environment:
      <<: *oracle-vars
      FLYWAY_USER: *ORACLE_USER
      FLYWAY_PASSWORD: *ORACLE_PASSWORD
      FLYWAY_DEFAULT_SCHEMA: *ORACLE_USER
      FLYWAY_BASELINE_ON_MIGRATE: true
    depends_on:
      oracle-silva:
        condition: service_healthy

  # oracle-data-load:
  #   image: nr-fds-pyetl-oracle-data-load:latest
  #   build:
  #       context: ./  # Path to the directory containing the Dockerfile
  #       dockerfile: Dockerfile.data_load  # Name of the Dockerfile (optional if named "Dockerfile")
  #   # image: python:3.13-slim-bookworm
  #   container_name: oracle-data-load
  #   # "CMD",
  #   # entrypoint: [ "/application/docker_run_ORA_TEST.sh"]
  #   working_dir: /app

  #   entrypoint: ["python", "db_env_utils/main_ora_ingest.py", TEST]
  #   volumes:
  #     # - "./data_prep:/app"
  #     - "./docker-compose.yml:/app/docker-compose.yml"
  #     - "./data:/app/data"
  #   environment:
  #     <<: [*oracle-vars]
  #   env_file:
  #     - ".env"
  #   depends_on:
  #     oracle-migrations:
  #       condition: service_completed_successfully

  # debug service, useful for understanding how environment variables work
  # ------------------------------------------------------------------------
  # # debug service, useful for understanding how environment variables work
  # echoit:
  #   image: functions/alpine:health
  #   environment:
  #     <<: *oracle-vars
  #     FLYWAY_USER: "${APP_USER}"
  #     FLYWAY_PASSWORD: "${APP_USER_PASSWORD}"
  #     FLYWAY_BASELINE_ON_MIGRATE: true
  #     FLYWAY_DEFAULT_SCHEMA: "${APP_USER}"
  #   entrypoint: ["/bin/sh", "-c", "export && echo \"oradb is ${FLYWAY_USER}\" &&  exec $fprocess"]

volumes:
  oracle-data:
